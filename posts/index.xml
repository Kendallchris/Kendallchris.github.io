<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Chris&#39; Portfolio</title>
    <link>https://Kendallchris.github.io/posts/</link>
    <description>Recent content in Posts on Chris&#39; Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Jan 2024 17:24:07 -0800</lastBuildDate>
    <atom:link href="https://Kendallchris.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Statistical Analysis in Prolog</title>
      <link>https://Kendallchris.github.io/posts/thirteenth-post/</link>
      <pubDate>Mon, 15 Jan 2024 17:24:07 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/thirteenth-post/</guid>
      <description>Statistical Analysis in Prolog Author: Chris Kendall
Date: 20 November 2023
This Prolog program, stats.pl, is designed for advanced statistical computations, focusing on linear regression, Pearson Correlation Coefficient, mean, and standard deviation. The program adeptly handles data from CSV files and performs complex statistical operations, showcasing the power of Prolog in data analysis.
Key Features CSV Data Handling: Efficiently loads data from specified columns of CSV files, accommodating both headers and non-header datasets.</description>
    </item>
    <item>
      <title>Statistical Analysis with `stats.scm`: A Comprehensive Overview</title>
      <link>https://Kendallchris.github.io/posts/twelth-post/</link>
      <pubDate>Mon, 15 Jan 2024 17:12:20 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/twelth-post/</guid>
      <description>Statistical Analysis with stats.scm: A Comprehensive Overview The stats.scm Scheme program provides a robust suite for performing statistical analysis on data extracted from CSV files. It is designed to handle tasks such as linear regression, computing Pearson Correlation Coefficients, and calculating mean and standard deviation. This overview will delve into the program&amp;rsquo;s structure, highlighting its key functions and providing code snippets to elucidate its functionality.
Key Functions of stats.scm read-csv</description>
    </item>
    <item>
      <title>Exploring Rational Numbers in C&#43;&#43;: Operator Overloading and Precision Handling</title>
      <link>https://Kendallchris.github.io/posts/eleventh-post/</link>
      <pubDate>Fri, 05 Jan 2024 17:41:10 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/eleventh-post/</guid>
      <description>Exploring Rational Numbers in C++: Operator Overloading and Precision Handling Introduction In a recent project, I tackled the fascinating challenge of representing rational numbers in C++ by developing a Rational class. This class not only stores rational numbers as a numerator and denominator but also implements a wide range of operator overloads to facilitate mathematical operations and comparisons.
Objectives Accurate Representation: Store rational numbers as two integers, a numerator, and a denominator.</description>
    </item>
    <item>
      <title>Implementing and Understanding Custom Data Structures in C&#43;&#43;</title>
      <link>https://Kendallchris.github.io/posts/tenth-post/</link>
      <pubDate>Fri, 05 Jan 2024 17:30:14 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/tenth-post/</guid>
      <description>Implementing and Understanding Custom Data Structures in C++ Overview Recently, I had the opportunity to delve into the complex world of data structures in C++. My project involved creating custom classes such as &amp;lsquo;VSArray&amp;rsquo;, &amp;lsquo;DoubleLinkedList&amp;rsquo;, and &amp;lsquo;SortedDoubleLinkedList&amp;rsquo;, each serving unique purposes and presenting their own set of challenges.
Goals &amp;lsquo;VSArray&amp;rsquo;: A dynamically resizable array class. &amp;lsquo;DoubleLinkedList&amp;rsquo;: A doubly linked list for efficient insertions and deletions. &amp;lsquo;SortedDoubleLinkedList&amp;rsquo;: An extension of DoubleLinkedList maintaining a sorted order of elements.</description>
    </item>
    <item>
      <title>Mastering Tree-Based Expression Evaluation in C&#43;&#43;</title>
      <link>https://Kendallchris.github.io/posts/ninth-post/</link>
      <pubDate>Thu, 28 Dec 2023 19:39:37 -0500</pubDate>
      <guid>https://Kendallchris.github.io/posts/ninth-post/</guid>
      <description>Mastering Tree-Based Expression Evaluation in C++ ##Project Synopsis
In a recent endeavor, I embarked on a challenging yet intriguing project in C++: constructing and evaluating expression trees from postfix expressions.
##Project Aims
The primary objective was to design a robust system that could:
- Build expression trees from given postfix expressions. - Perform various tree traversals (Inorder, Preorder, Postorder). - Evaluate the expressions represented by these trees. ##Core Compnents
The project revolved around two key C++ classes:</description>
    </item>
    <item>
      <title>Navigating the Complexities of Infix to Postfix Conversion in C&#43;&#43;</title>
      <link>https://Kendallchris.github.io/posts/eighth-post/</link>
      <pubDate>Tue, 19 Dec 2023 08:02:24 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/eighth-post/</guid>
      <description>Navigating the Complexities of Infix to Postfix Conversion in C++ Project Overview My recent project delved into the intricacies of converting infix expressions to postfix format in C++, a crucial aspect in understanding the nuances of computer algorithms and programming languages.
Objective The primary goal was to develop a C++ program capable of converting complex infix expressions to their corresponding postfix formats, a task that involves a deep understanding of stack data structures and the precedence of arithmetic operators.</description>
    </item>
    <item>
      <title>Mastering Dynamic Memory in C&#43;&#43;: The IntegerSet Class</title>
      <link>https://Kendallchris.github.io/posts/seventh-post/</link>
      <pubDate>Tue, 19 Dec 2023 07:52:41 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/seventh-post/</guid>
      <description>Mastering Dynamic Memory in C++: The IntegerSet Class Project Overview In a recent academic assignment, I tackled the implementation of a dynamic IntegerSet class in C++. This project was designed to strengthen my skills in handling dynamic memory, working with classes and arrays, and ensuring efficient memory management to avoid leaks.
Objective The primary goal was to implement various methods for the IntegerSet class that allow manipulation and analysis of sets of integers.</description>
    </item>
    <item>
      <title>Implementing Shape Inheritance in C&#43;&#43;</title>
      <link>https://Kendallchris.github.io/posts/sixth-post/</link>
      <pubDate>Tue, 19 Dec 2023 07:35:16 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/sixth-post/</guid>
      <description>Implementing Shape Inheritance in C++ In my latest academic endeavor, I explored the concept of inheritance in C++ by creating a hierarchy of shape classes. This project involved constructing a base Shape class and several derived classes like Ellipse, Circle, Rectangle, and Square, each with unique characteristics.
Project Overview The primary goal was to demonstrate inheritance and polymorphism in object-oriented programming. Each class in the hierarchy inherited properties and methods from its parent class while introducing its own unique features.</description>
    </item>
    <item>
      <title>Creating a Dynamic Menu Class in C&#43;&#43;</title>
      <link>https://Kendallchris.github.io/posts/fifth-post/</link>
      <pubDate>Tue, 12 Dec 2023 19:49:49 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/fifth-post/</guid>
      <description>Creating a Dynamic Menu Class in C++ In this post, I&amp;rsquo;ll share my experience developing a dynamic menu system in C++, a project that highlights my skills in creating reusable libraries. This system allows programmers to easily generate custom menus for their applications, with flexibility in menu options and input types.
Project Overview The core of this project lies in the Menu and MenuElement classes. These classes collaborate to create a menu system that can be easily integrated into various applications, offering customizable options and handling user interactions efficiently.</description>
    </item>
    <item>
      <title>Array Library</title>
      <link>https://Kendallchris.github.io/posts/fourth-post/</link>
      <pubDate>Tue, 12 Dec 2023 19:49:28 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/fourth-post/</guid>
      <description>#Exploring Array Manipulations in C++ In this post, I delve into an intricate C++ project focused on array manipulations, which forms a part of my advanced programming studies. This project accentuates my understanding of basic data structures in C++ and exhibits my skills in implementing various array-based algorithms.
##Project Overview This project, consisting of two primary components - the main function and the array_library, explores different operations on arrays, such as searching, sorting, and statistical analysis.</description>
    </item>
    <item>
      <title>Expression Evaluator</title>
      <link>https://Kendallchris.github.io/posts/third-post/</link>
      <pubDate>Thu, 07 Dec 2023 13:33:51 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/third-post/</guid>
      <description>Step-by-Step Evaluation of Arithmetic Expressions in C++ In this post, I explore a C++ project that I developed for evaluating arithmetic expressions step-by-step. The project, part of my coursework, highlights my proficiency in utilizing C++ standard library features and understanding complex programming concepts.
Project Insight The project comprises three main components: the &amp;lsquo;main&amp;rsquo; function, the &amp;rsquo;evaluator&amp;rsquo; module, and &amp;rsquo;test scripts&amp;rsquo;. Each plays a vital role in reading, processing, and evaluating arithmetic expressions, outputting each step of the evaluation process.</description>
    </item>
    <item>
      <title>Three Points</title>
      <link>https://Kendallchris.github.io/posts/second-post/</link>
      <pubDate>Wed, 06 Dec 2023 15:41:32 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/second-post/</guid>
      <description>Understanding Geometry with C++: Three Points Analysis In this post, I delve into a C++ project that leverages geometric principles to analyze whether three points form a line or a triangle. Titled &amp;ldquo;Lab 1 - threepoints.cpp,&amp;rdquo; this project exemplifies the application of mathematical concepts in computer programming, demonstrating my grasp of both C++ programming and geometric computation.
In-Depth Look at the Three Points Analysis The program&amp;rsquo;s essence lies in taking three points as input and applying geometric formulas to deduce their collective shape.</description>
    </item>
    <item>
      <title>Guessing Game</title>
      <link>https://Kendallchris.github.io/posts/my-first-post/</link>
      <pubDate>Mon, 04 Dec 2023 13:25:35 -0800</pubDate>
      <guid>https://Kendallchris.github.io/posts/my-first-post/</guid>
      <description>A guessing game to start coding in C++ In this post, I want to delve into a fun and interactive way that I begin coding in C++. I&amp;rsquo;ll discuss a simple guessing game that not only introduces basic programming concepts like loops and conditional statements but also gives insight into some fundamental data structures in C++.
Deep Dive into the Guessing Game The game&amp;rsquo;s primary objective is for the player to guess a randomly generated number within a specified range.</description>
    </item>
  </channel>
</rss>
